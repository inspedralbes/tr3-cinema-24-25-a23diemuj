# Resumen:
# 
# Este proyecto está compuesto por varios servicios: una base de datos MySQL, un frontend en Vue.js, un backend en Laravel y un servidor Node.js.
# Cada servicio está definido en su respectiva sección de Docker Compose.
# 
# Para ejecutar el proyecto:
#
# 1. Asegúrate de tener Docker y Docker Compose instalados en tu máquina.
# 2. Una vez que los contenedores estén en ejecución, sigue estos pasos:
#
#   - Para instalar las dependencias de Node.js y Laravel:
#
#     1. Navega a la carpeta `back/laravel` y ejecuta `composer install`.
#     2. Navega a la carpeta `back/node` y ejecuta `npm install`.
#
#    - Para iniciar la aplicación, escribe en la terminal `docker-compose up`.
# 
# Los servicios estarán disponibles en los siguientes puertos:
# - Frontend (Vue.js): http://localhost:5173
# - Backend (Laravel): http://localhost:8000
# - Adminer (gestor de base de datos MySQL): http://localhost:9092

services:

  # Servicio de la base de datos MySQL
  # Proporciona una base de datos MySQL con un script de inicialización.
  db:
    image: mysql:8.2.0  # Imagen oficial de MySQL versión 8.2.0
    restart: always  # Reinicia automáticamente el contenedor si se detiene
    environment:
      MYSQL_ROOT_PASSWORD: root  # Contraseña del usuario root
      MYSQL_DATABASE: masket     # Nombre de la base de datos inicial
    ports:
      - "3306:3306"  # Expone el puerto 3306 para conexiones externas
    volumes:
      - ./mysql_data:/var/lib/mysql  # Almacena datos de MySQL de forma persistente
  # - ./back/laravel.sql:/docker-entrypoint-initdb.d/laravel.sql  # Script de inicialización de la base de datos

  # Adminer para gestionar la base de datos
  # Herramienta web para administrar bases de datos MySQL.
  adminer:
    image: adminer  # Imagen oficial de Adminer
    restart: always  # Reinicia automáticamente el contenedor si se detiene
    depends_on:
      - db  # Este servicio depende de la base de datos
    ports:
      - 9092:8080  # Accesible en el puerto 9092 del host

  # Servicio de la aplicación Vue.js
  # Proporciona un entorno para ejecutar y servir la aplicación Vue.js.
  vue-app:
    image: node:18  # Usa la imagen oficial de Node.js versión 18
    working_dir: /app  # Define el directorio de trabajo dentro del contenedor
    volumes:
      - ./front/basket:/app  # Montaje del código fuente del frontend como volumen
      - /app/node_modules    # Mantiene las dependencias instaladas
    ports:
      - "5173:5173"  # Expone el servidor de desarrollo de Vue en el puerto 5173
    command: /bin/bash -c "npm install && npm run dev"
    depends_on:
      - db  # Depende de la base de datos para su funcionamiento

  # Servicio de la aplicación Laravel (backend)
  # Proporciona un entorno para ejecutar la aplicación Laravel.
  laravel:
    build: ./back/laravel  # Construye la imagen utilizando el Dockerfile en ./back/laravel
    volumes:
      - ./back/laravel:/var/www/  # Montaje del código fuente de Laravel como volumen
    working_dir: /var/www  # Define el directorio de trabajo dentro del contenedor
    environment:
      - DB_HOST=db
      - DB_DATABASE=masket
      - DB_USERNAME=root
      - DB_PASSWORD=root
    ports:
      - "8000:8000"  # Expone el servidor de desarrollo de Laravel en el puerto 8000
    depends_on:
      - db  # Depende de la base de datos para su funcionamiento
    command: bash -c "sleep 10; php artisan key:generate && php artisan migrate:fresh --seed && php artisan serve --host=0.0.0.0"
      # Genera la clave de la aplicación, ejecuta migraciones y datos iniciales, y sirve la aplicación Laravel

  # Servicio Node.js para el servidor backend
  # Proporciona un entorno para ejecutar un servidor Node.js personalizado.
  node-server:
    image: node:18  # Usa la imagen oficial de Node.js versión 18
    volumes:
      - ./back/node:/app  # Montaje del código fuente del backend como volumen
    working_dir: /app  # Define el directorio de trabajo dentro del contenedor
    ports:
      - "20070:20070"  # Expone el puerto del servidor backend Node.js
    command: /bin/bash -c "sleep 15;node server.js"
    depends_on:
      - db  # Depende de la base de datos
      - laravel